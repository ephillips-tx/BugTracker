@model BugTracker.Models.ViewModels.ProjectMembersViewModel
@using BugTracker.Services.Interfaces
@inject IBTRolesService RolesService

@{
    var roleArray = new string[Model.Users.Count()];
    int count = 0;
    foreach (BTUser user in Model.Users.Items)
    {
        roleArray[count++] = (await RolesService.GetUserRolesAsync(user)).First();
    }

    foreach(var i in roleArray)
    {
        Console.WriteLine(i);
    }
}

<div class="col-12 text-center">
    <h2>Assign Members for</h2>
    <h3>@Model.Project.Name</h3>
    <div class="row">
        <div class="col-6">
            <form method="post" asp-action="AssignMembers" asp-controller="Projects">
                <input hidden asp-for="Project.Id" />
                <div class="col-12 mb-3">
                    <div class="form-group">
                        <select required asp-for="@Model.SelectedUsers" class="form-control bg-dark text-light" asp-items="@Model.Users" multiple="multiple" size="10" id="ProjectMemberSelect"></select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="d-flex">
                        <input type="submit" class="btn btn-danger" value="Assign Users" />
                        <a asp-action="Details" asp-controller="Projects" asp-route-id="@Model.Project.Id" class="btn btn-secondary text-decoration-none ms-auto">Back to Details</a>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-4">
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let roleArr = [];
        @foreach(var r in roleArray)
        {
            @:roleArr.push("@r");
        }
        let selectOptions = document.getElementById("ProjectMemberSelect").options
        for(let x=0; x<selectOptions.length; x++){
            selectOptions[x].innerHTML = selectOptions[x].innerHTML + "&nbsp;&nbsp;&nbsp;&#8208;&nbsp;&nbsp;&nbsp;" + roleArr[x]
        }
    </script>
}
