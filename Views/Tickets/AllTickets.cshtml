@model IEnumerable<BugTracker.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces
@using BugTracker.Models.Enums

@inject UserManager<BTUser> userManager
@inject IBTProjectService projectService

@{
    ViewData["Title"] = "All Tickets";
    BTUser btUser = await userManager.GetUserAsync(User);
}

<div class="col-12">
    <div class="row mb-3">
        <div class="col-lg-3 col-md-6 col-sm-6 mt-4">
			<div class="card text-center dash-card py-3" id="card1">
                <div id="chart1">
                    <div id="chart3D"></div>
                </div>	
				<div>
                    <h3 class="text-light">@Model.Count()</h3>
					<span class="text-secondary fw-bolder">Total Tickets By Project</span>
				</div>
			</div>
		</div>
        <div class="col-lg-3 col-md-6 col-sm-6 mt-4">
			<div class="card text-center dash-card py-3">
                <div>
                    <div id="donut1"></div>
                </div>
				<div>
					<h3 class="text-light">@Model.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.New)).Count()</h3>
					<span class="text-secondary fw-bolder">Status: Open</span>
				</div>
			</div>
		</div>
        <div class="col-lg-3 col-md-6 col-sm-6 mt-4">
			<div class="card text-center dash-card py-3">
                <div>
                    <div id="donut2"></div>
                </div>
				<div>
					<h3 class="text-light">@Model.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count()</h3>
					<span class="text-secondary fw-bolder">Status: Development</span>
				</div>
			</div>
		</div>
        <div class="col-lg-3 col-md-6 col-sm-6 mt-4">
            <div class="card text-center dash-card py-3">
                <div>
                    <div id="donut3"></div>
                </div>
                <div>
                    <h3 class="text-light">@Model.Where(t=>t.TicketStatus.Name == nameof(BTTicketStatus.Resolved)).Count()</h3>
                    <span class="text-secondary fw-bolder">Status: Closed</span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-12 my-4">
    <table class="table align-middle">
        <thead class="text-pink">
            <tr>
                <th>Owner</th>
                <th>Assigned To</th>
                <th>Title</th>
                <th>Status</th>
                <th>Priority</th>
                <th>Last Updated</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in Model)
            {
                <tr class="text-light">
                    <td>
                        @if(ticket.OwnerUser != null)
                        {
                            <span>@ticket.OwnerUser.FullName</span>
                        }
                        else
                        {
                            <span>SEEDED</span>
                        }
                    </td>
                    <td>
                        @if(ticket.DeveloperUser != null)
                        {
                            <span>@ticket.DeveloperUser.FullName</span>
                        }
                        else
                        {
                            <span class="badge bg-warning rounded-pill text-dark">Unassigned</span>
                        }
                    </td>
                    <td>
                        @ticket.Title
                    </td>
                    <td>
                        @if(ticket.TicketStatus.Name == "New")
                        {
                            <span class="btn btn-small btn-outline-success">@ticket.TicketStatus.Name</span>
                        }
                        else
                        {
                            <span class="btn btn-small btn-outline-secondary">@ticket.TicketStatus.Name </span>
                        }
                    </td>
                    @{
                        string badgeColor = "btn-outline-info";
                        switch (ticket.TicketPriority.Name)
                        {
                            case "Urgent":
                                badgeColor = "btn-outline-danger";
                                break;
                            case "High":
                                badgeColor = "btn-outline-warning";
                                break;
                            case "Medium":
                                badgeColor = "btn-outline-primary";
                                break;
                            default:
                                break;
                        }
                    }
                    <td>
                        <span class="btn btn-sm @badgeColor">@ticket.TicketPriority.Name </span>
                    </td>
                    <td>
                        @if (ticket.Updated != null)
                        {
                            <span style="font-size:small;color: #f8f9fa">@ticket.Updated?.ToString("MM-dd-yyyy")</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" class="text-decoration-none text-light"><i class="fs-5 bi-justify"></i></a>
                        <span class="vr"></span>
                        @{
                            bool isDev = ticket.DeveloperUserId == btUser.Id;
                            bool isOwner = ticket.OwnerUserId == btUser.Id;
                        }

                        @if (User.IsInRole(nameof(Roles.Admin)) || isDev || isOwner)
                        {
                            <a asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id" class="text-decoration-none text-info"><i class="fs-5 bi-pencil"></i></a>
                            <span class="vr"></span>

                            @if (ticket.Archived)
                            {
                                <a asp-action="Restore" asp-controller="Tickets" asp-route-id="@ticket.Id" class="text-decoration-none text-success"><i class="fs-5 bi-arrow-clockwise"></i></a>
                            }
                            else
                            {
                                <a asp-action="Archive" asp-controller="Tickets" asp-route-id="@ticket.Id" class="text-decoration-none text-danger"><i class="fs-5 bi-archive"></i></a>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts{
    <script>
        var el = document.getElementById("card1");
        var cardStyle = el.currentStyle || getComputedStyle(el, null);
        //console.log(cardStyle);
    </script>

    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <!-- Pie #1 -->
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Tickets/GglTicketsByProject",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //2D Pie
                    var options = {
                        title: 'Total Tickets By Project',
                        is3D: false,
                        backgroundColor: { fill: cardStyle.backgroundColor },
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: {
                            position: 'top', // not visible
                            textStyle: { color: cardStyle.color }
                        }

                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <!-- Donut #1 -->
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Tickets/GglOpenTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var chColor = 'deeppink';
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Open Tickets',
                        pieHole: 0.9,
                        backgroundColor: { fill: cardStyle.backgroundColor },
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: 'none',
                        pieSliceText: 'label',
                        slices: {0: {color: chColor}, 1: {color: 'lightgray'}}
                    };
                    var chart = new google.visualization.PieChart($("#donut1")[0]);
                    chart.draw(data, options);
                    var labelData = data.Wf[0].c[0].v
                    addDonutChartLabel("#donut1", chColor, labelData)
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <!-- Donut #2 -->
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Tickets/GglDevTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var chColor = 'dodgerblue';
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Development Tickets',
                        pieHole: 0.9,
                        backgroundColor: { fill: cardStyle.backgroundColor },
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: 'none',
                        pieSliceText: 'label',
                        slices: { 0: { color: chColor }, 1: { color: 'lightgray' } }
                    };
                    var chart = new google.visualization.PieChart($("#donut2")[0]);
                    chart.draw(data, options);
                    var labelData = data.Wf[0].c[0].v
                    addDonutChartLabel("#donut2", chColor, labelData)
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <!-- Donut #3 -->
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Tickets/GglResolvedTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var chColor = 'darkorange';
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Closed Tickets',
                        pieHole: 0.9,
                        backgroundColor: { fill: cardStyle.backgroundColor },
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: 'none',
                        pieSliceText: 'label',
                        slices: { 0: { color: chColor }, 1: { color: 'lightgray' } }
                    };
                    var chart = new google.visualization.PieChart($("#donut3")[0]);
                    chart.draw(data, options);
                    var labelData = data.Wf[0].c[0].v
                    addDonutChartLabel("#donut3", chColor, labelData)
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
}